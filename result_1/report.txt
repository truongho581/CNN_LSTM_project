# Trạm để lấy data test
station_data = ["FS10D", 40.4328, -124.6940, -1153.8]  #2014-07-17	2015-08-27

# Trạm để lấy data train/val
#station_data = ["M11B", 42.9320, -125.0171, -1109.0]   #2012-09-02	2013-06-18   58 sự kiện
#station_data = ["M12B", 42.1840, -124.9461, -1045.0]   #2012-09-02	2013-06-18   115 sự kiện
#station_data = ["FS41D", 40.6124, -124.7310, -1079.3]  #2014-07-16	2015-08-28   124 sự kiện
#station_data = ["FS16D", 40.5378, -124.7468, -1080.4]  #2014-07-16	2015-08-28   121 sự kiện

=========================================================================================================================

 Found 736 images belonging to 2 classes.
23/23 ━━━━━━━━━━━━━━━━━━━━ 6s 257ms/step - accuracy: 0.9584 - loss: 0.1602
🎯 Test Accuracy: 96.60%
23/23 ━━━━━━━━━━━━━━━━━━━━ 5s 211ms/step

📊 Classification Report:
              precision    recall  f1-score   support

       Noise       0.97      0.96      0.97       368
  Earthquake       0.96      0.97      0.97       368

    accuracy                           0.97       736
   macro avg       0.97      0.97      0.97       736
weighted avg       0.97      0.97      0.97       736


🧮 Confusion Matrix:
[[354  14]
 [ 11 357]]

==============================================================================

Found 736 images belonging to 2 classes.

23/23 ━━━━━━━━━━━━━━━━━━━━ 5s 221ms/step - accuracy: 0.9574 - loss: 0.1605
🎯 Test Accuracy: 97.01%
23/23 ━━━━━━━━━━━━━━━━━━━━ 6s 238ms/step

📊 Classification Report:
              precision    recall  f1-score   support

       Noise       0.97      0.97      0.97       368
  Earthquake       0.97      0.97      0.97       368

    accuracy                           0.97       736
   macro avg       0.97      0.97      0.97       736
weighted avg       0.97      0.97      0.97       736


🧮 Confusion Matrix:
[[358  10]
 [ 12 356]]

Training
Epoch 1/30
50/50 ━━━━━━━━━━━━━━━━━━━━ 0s 2s/step - accuracy: 0.5775 - loss: 0.6692/usr/local/lib/python3.11/dist-packages/keras/src/trainers/data_adapters/py_dataset_adapter.py:121: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.
  self._warn_if_super_not_called()

Epoch 1: val_accuracy improved from -inf to 0.68000, saving model to best_model.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
50/50 ━━━━━━━━━━━━━━━━━━━━ 96s 2s/step - accuracy: 0.5784 - loss: 0.6686 - val_accuracy: 0.6800 - val_loss: 0.5307
Epoch 2/30
50/50 ━━━━━━━━━━━━━━━━━━━━ 0s 2s/step - accuracy: 0.7479 - loss: 0.5103
Epoch 2: val_accuracy improved from 0.68000 to 0.91125, saving model to best_model.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
50/50 ━━━━━━━━━━━━━━━━━━━━ 141s 2s/step - accuracy: 0.7484 - loss: 0.5096 - val_accuracy: 0.9112 - val_loss: 0.3184
Epoch 3/30
50/50 ━━━━━━━━━━━━━━━━━━━━ 0s 2s/step - accuracy: 0.8029 - loss: 0.4468
Epoch 3: val_accuracy did not improve from 0.91125
50/50 ━━━━━━━━━━━━━━━━━━━━ 91s 2s/step - accuracy: 0.8033 - loss: 0.4461 - val_accuracy: 0.8813 - val_loss: 0.2969
Epoch 4/30
50/50 ━━━━━━━━━━━━━━━━━━━━ 0s 2s/step - accuracy: 0.8384 - loss: 0.3855
Epoch 4: val_accuracy did not improve from 0.91125
50/50 ━━━━━━━━━━━━━━━━━━━━ 96s 2s/step - accuracy: 0.8384 - loss: 0.3856 - val_accuracy: 0.8900 - val_loss: 0.3024
Epoch 5/30
50/50 ━━━━━━━━━━━━━━━━━━━━ 0s 2s/step - accuracy: 0.8503 - loss: 0.3531
Epoch 5: val_accuracy did not improve from 0.91125
50/50 ━━━━━━━━━━━━━━━━━━━━ 91s 2s/step - accuracy: 0.8502 - loss: 0.3534 - val_accuracy: 0.8138 - val_loss: 0.3901
Epoch 6/30
50/50 ━━━━━━━━━━━━━━━━━━━━ 0s 2s/step - accuracy: 0.8454 - loss: 0.3561
Epoch 6: val_accuracy did not improve from 0.91125
50/50 ━━━━━━━━━━━━━━━━━━━━ 96s 2s/step - accuracy: 0.8452 - loss: 0.3565 - val_accuracy: 0.8625 - val_loss: 0.3628
Epoch 7/30
50/50 ━━━━━━━━━━━━━━━━━━━━ 0s 2s/step - accuracy: 0.8211 - loss: 0.3940
Epoch 7: val_accuracy did not improve from 0.91125
50/50 ━━━━━━━━━━━━━━━━━━━━ 96s 2s/step - accuracy: 0.8213 - loss: 0.3939 - val_accuracy: 0.8988 - val_loss: 0.2670
Epoch 8/30
50/50 ━━━━━━━━━━━━━━━━━━━━ 0s 2s/step - accuracy: 0.8492 - loss: 0.3635
Epoch 8: val_accuracy did not improve from 0.91125
50/50 ━━━━━━━━━━━━━━━━━━━━ 95s 2s/step - accuracy: 0.8492 - loss: 0.3634 - val_accuracy: 0.8950 - val_loss: 0.2597
Epoch 9/30
50/50 ━━━━━━━━━━━━━━━━━━━━ 0s 2s/step - accuracy: 0.8343 - loss: 0.3796
Epoch 9: val_accuracy did not improve from 0.91125
50/50 ━━━━━━━━━━━━━━━━━━━━ 96s 2s/step - accuracy: 0.8342 - loss: 0.3799 - val_accuracy: 0.8413 - val_loss: 0.3685
Epoch 10/30
50/50 ━━━━━━━━━━━━━━━━━━━━ 0s 2s/step - accuracy: 0.8506 - loss: 0.3630
Epoch 10: val_accuracy did not improve from 0.91125
50/50 ━━━━━━━━━━━━━━━━━━━━ 90s 2s/step - accuracy: 0.8507 - loss: 0.3629 - val_accuracy: 0.8925 - val_loss: 0.2884
Epoch 11/30
50/50 ━━━━━━━━━━━━━━━━━━━━ 0s 2s/step - accuracy: 0.8640 - loss: 0.3364
Epoch 11: val_accuracy did not improve from 0.91125
50/50 ━━━━━━━━━━━━━━━━━━━━ 91s 2s/step - accuracy: 0.8640 - loss: 0.3363 - val_accuracy: 0.8725 - val_loss: 0.3069
Epoch 12/30
50/50 ━━━━━━━━━━━━━━━━━━━━ 0s 2s/step - accuracy: 0.8548 - loss: 0.3445
Epoch 12: val_accuracy did not improve from 0.91125
50/50 ━━━━━━━━━━━━━━━━━━━━ 142s 2s/step - accuracy: 0.8547 - loss: 0.3446 - val_accuracy: 0.8938 - val_loss: 0.2620
Epoch 13/30
50/50 ━━━━━━━━━━━━━━━━━━━━ 0s 2s/step - accuracy: 0.8557 - loss: 0.3462
Epoch 13: val_accuracy did not improve from 0.91125
50/50 ━━━━━━━━━━━━━━━━━━━━ 147s 2s/step - accuracy: 0.8557 - loss: 0.3462 - val_accuracy: 0.8850 - val_loss: 0.2825
Epoch 14/30
50/50 ━━━━━━━━━━━━━━━━━━━━ 0s 2s/step - accuracy: 0.8650 - loss: 0.3178
Epoch 14: val_accuracy did not improve from 0.91125
50/50 ━━━━━━━━━━━━━━━━━━━━ 91s 2s/step - accuracy: 0.8649 - loss: 0.3180 - val_accuracy: 0.8850 - val_loss: 0.2689
Epoch 15/30
50/50 ━━━━━━━━━━━━━━━━━━━━ 0s 2s/step - accuracy: 0.8592 - loss: 0.3356
Epoch 15: val_accuracy did not improve from 0.91125
50/50 ━━━━━━━━━━━━━━━━━━━━ 91s 2s/step - accuracy: 0.8591 - loss: 0.3358 - val_accuracy: 0.8675 - val_loss: 0.3291
Epoch 16/30
50/50 ━━━━━━━━━━━━━━━━━━━━ 0s 2s/step - accuracy: 0.8369 - loss: 0.3821
Epoch 16: val_accuracy did not improve from 0.91125
50/50 ━━━━━━━━━━━━━━━━━━━━ 92s 2s/step - accuracy: 0.8371 - loss: 0.3816 - val_accuracy: 0.8900 - val_loss: 0.2674
Epoch 17/30
50/50 ━━━━━━━━━━━━━━━━━━━━ 0s 2s/step - accuracy: 0.8521 - loss: 0.3349
Epoch 17: val_accuracy did not improve from 0.91125
50/50 ━━━━━━━━━━━━━━━━━━━━ 90s 2s/step - accuracy: 0.8523 - loss: 0.3346 - val_accuracy: 0.9025 - val_loss: 0.2553
Epoch 18/30
50/50 ━━━━━━━━━━━━━━━━━━━━ 0s 2s/step - accuracy: 0.8522 - loss: 0.3411
Epoch 18: val_accuracy did not improve from 0.91125
50/50 ━━━━━━━━━━━━━━━━━━━━ 96s 2s/step - accuracy: 0.8523 - loss: 0.3412 - val_accuracy: 0.8813 - val_loss: 0.2953
Epoch 19/30
50/50 ━━━━━━━━━━━━━━━━━━━━ 0s 2s/step - accuracy: 0.8679 - loss: 0.3211
Epoch 19: val_accuracy did not improve from 0.91125
50/50 ━━━━━━━━━━━━━━━━━━━━ 91s 2s/step - accuracy: 0.8677 - loss: 0.3213 - val_accuracy: 0.8825 - val_loss: 0.2847
Epoch 20/30
50/50 ━━━━━━━━━━━━━━━━━━━━ 0s 2s/step - accuracy: 0.8525 - loss: 0.3531
Epoch 20: val_accuracy did not improve from 0.91125
50/50 ━━━━━━━━━━━━━━━━━━━━ 95s 2s/step - accuracy: 0.8526 - loss: 0.3528 - val_accuracy: 0.9025 - val_loss: 0.2387
Epoch 21/30
50/50 ━━━━━━━━━━━━━━━━━━━━ 0s 2s/step - accuracy: 0.8663 - loss: 0.3158
Epoch 21: val_accuracy did not improve from 0.91125
50/50 ━━━━━━━━━━━━━━━━━━━━ 91s 2s/step - accuracy: 0.8663 - loss: 0.3158 - val_accuracy: 0.8775 - val_loss: 0.2839
Epoch 22/30
50/50 ━━━━━━━━━━━━━━━━━━━━ 0s 2s/step - accuracy: 0.8666 - loss: 0.3178
Epoch 22: val_accuracy did not improve from 0.91125
50/50 ━━━━━━━━━━━━━━━━━━━━ 96s 2s/step - accuracy: 0.8663 - loss: 0.3182 - val_accuracy: 0.8913 - val_loss: 0.2569
Epoch 23/30
50/50 ━━━━━━━━━━━━━━━━━━━━ 0s 2s/step - accuracy: 0.8572 - loss: 0.3216
Epoch 23: val_accuracy did not improve from 0.91125
50/50 ━━━━━━━━━━━━━━━━━━━━ 92s 2s/step - accuracy: 0.8572 - loss: 0.3218 - val_accuracy: 0.8913 - val_loss: 0.2537
Epoch 24/30
50/50 ━━━━━━━━━━━━━━━━━━━━ 0s 2s/step - accuracy: 0.8633 - loss: 0.3243
Epoch 24: val_accuracy did not improve from 0.91125
50/50 ━━━━━━━━━━━━━━━━━━━━ 96s 2s/step - accuracy: 0.8635 - loss: 0.3241 - val_accuracy: 0.8913 - val_loss: 0.2724
Epoch 25/30
50/50 ━━━━━━━━━━━━━━━━━━━━ 0s 2s/step - accuracy: 0.8795 - loss: 0.2936
Epoch 25: val_accuracy did not improve from 0.91125
50/50 ━━━━━━━━━━━━━━━━━━━━ 91s 2s/step - accuracy: 0.8793 - loss: 0.2940 - val_accuracy: 0.9038 - val_loss: 0.2370
Epoch 26/30
50/50 ━━━━━━━━━━━━━━━━━━━━ 0s 2s/step - accuracy: 0.8590 - loss: 0.3281
Epoch 26: val_accuracy did not improve from 0.91125
50/50 ━━━━━━━━━━━━━━━━━━━━ 96s 2s/step - accuracy: 0.8591 - loss: 0.3281 - val_accuracy: 0.9025 - val_loss: 0.2353
Epoch 27/30
50/50 ━━━━━━━━━━━━━━━━━━━━ 0s 2s/step - accuracy: 0.8603 - loss: 0.3127
Epoch 27: val_accuracy did not improve from 0.91125
50/50 ━━━━━━━━━━━━━━━━━━━━ 91s 2s/step - accuracy: 0.8604 - loss: 0.3126 - val_accuracy: 0.9050 - val_loss: 0.2387
Epoch 28/30
50/50 ━━━━━━━━━━━━━━━━━━━━ 0s 2s/step - accuracy: 0.8730 - loss: 0.3092
Epoch 28: val_accuracy did not improve from 0.91125
50/50 ━━━━━━━━━━━━━━━━━━━━ 96s 2s/step - accuracy: 0.8730 - loss: 0.3090 - val_accuracy: 0.9050 - val_loss: 0.2257
Epoch 29/30
50/50 ━━━━━━━━━━━━━━━━━━━━ 0s 2s/step - accuracy: 0.8540 - loss: 0.3352
Epoch 29: val_accuracy did not improve from 0.91125
50/50 ━━━━━━━━━━━━━━━━━━━━ 91s 2s/step - accuracy: 0.8543 - loss: 0.3349 - val_accuracy: 0.9075 - val_loss: 0.2274
Epoch 30/30
50/50 ━━━━━━━━━━━━━━━━━━━━ 0s 2s/step - accuracy: 0.8693 - loss: 0.3190
Epoch 30: val_accuracy did not improve from 0.91125
50/50 ━━━━━━━━━━━━━━━━━━━━ 96s 2s/step - accuracy: 0.8693 - loss: 0.3189 - val_accuracy: 0.9062 - val_loss: 0.2386
Restoring model weights from the end of the best epoch: 28.